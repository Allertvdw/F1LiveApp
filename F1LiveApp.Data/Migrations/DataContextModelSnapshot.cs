// <auto-generated />
using System;
using F1LiveApp.Data.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace F1LiveApp.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("F1LiveApp.Business.Models.Driver", b =>
                {
                    b.Property<int>("Driver_Number")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Driver_Number"));

                    b.Property<string>("Broadcast_Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Country_Code")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("First_Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Full_Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Headshot_Url")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Last_Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Meeting_Key")
                        .HasColumnType("int");

                    b.Property<string>("Name_Acronym")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Session_Key")
                        .HasColumnType("int");

                    b.Property<string>("Team_Colour")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Team_Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Driver_Number");

                    b.HasIndex("Meeting_Key");

                    b.HasIndex("Session_Key");

                    b.ToTable("Drivers");
                });

            modelBuilder.Entity("F1LiveApp.Business.Models.Meeting", b =>
                {
                    b.Property<int>("Meeting_Key")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Meeting_Key"));

                    b.Property<int>("Circuit_Key")
                        .HasColumnType("int");

                    b.Property<string>("Circuit_Short_Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Country_Code")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Country_Key")
                        .HasColumnType("int");

                    b.Property<string>("Country_Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Date_Start")
                        .HasColumnType("datetime(6)");

                    b.Property<TimeSpan>("Gmt_Offset")
                        .HasColumnType("time(6)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Meeting_Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Meeting_Official_Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Meeting_Key");

                    b.ToTable("Meetings");
                });

            modelBuilder.Entity("F1LiveApp.Business.Models.Session", b =>
                {
                    b.Property<int>("Session_Key")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Session_Key"));

                    b.Property<DateTime>("Date_End")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("Date_Start")
                        .HasColumnType("datetime(6)");

                    b.Property<TimeSpan>("Gmt_Offset")
                        .HasColumnType("time(6)");

                    b.Property<int>("Meeting_Key")
                        .HasColumnType("int");

                    b.Property<string>("Session_Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Session_Type")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Session_Key");

                    b.HasIndex("Meeting_Key");

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("F1LiveApp.Business.Models.Driver", b =>
                {
                    b.HasOne("F1LiveApp.Business.Models.Meeting", "Meeting")
                        .WithMany()
                        .HasForeignKey("Meeting_Key")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("F1LiveApp.Business.Models.Session", "Session")
                        .WithMany()
                        .HasForeignKey("Session_Key")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Meeting");

                    b.Navigation("Session");
                });

            modelBuilder.Entity("F1LiveApp.Business.Models.Session", b =>
                {
                    b.HasOne("F1LiveApp.Business.Models.Meeting", "Meeting")
                        .WithMany()
                        .HasForeignKey("Meeting_Key")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Meeting");
                });
#pragma warning restore 612, 618
        }
    }
}
